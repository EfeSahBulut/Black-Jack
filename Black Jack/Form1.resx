<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eCT/2Q==
</value>
  </data>
</root>